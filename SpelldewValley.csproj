<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{F1C9E374-8488-4877-AEF5-B2FA1A2B4F88}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SpelldewValley</RootNamespace>
    <AssemblyName>SpelldewValley</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Build" />
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="IContentPatcherAPI.cs" />
    <Compile Include="ModEntry.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="manifest.json" />
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="packages\Pathoschild.Stardew.ModBuildConfig.3.2.2\build\Pathoschild.Stardew.ModBuildConfig.targets" Condition="Exists('packages\Pathoschild.Stardew.ModBuildConfig.3.2.2\build\Pathoschild.Stardew.ModBuildConfig.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\Pathoschild.Stardew.ModBuildConfig.3.2.2\build\Pathoschild.Stardew.ModBuildConfig.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\Pathoschild.Stardew.ModBuildConfig.3.2.2\build\Pathoschild.Stardew.ModBuildConfig.targets'))" />
  </Target>
  <ItemGroup>
	  <ModContentFiles Include="$(TargetName)Content\*.json"/>
  </ItemGroup>
  <Target Name="Zip" BeforeTargets="AfterBuild">
	  <ItemGroup>
		  <OutputManifest Include="manifest.json"/>
		  <OutputFiles Include="$(OutDir)\*.dll;$(OutDir)\*.pdb"/>
	  </ItemGroup>
	  <Copy
		  SourceFiles="@(OutputManifest)"
		  DestinationFolder="bin\Output\$(TargetName)"
	  />
	  <Copy
		  SourceFiles="@(OutputFiles)"
		  DestinationFolder="bin\Output\$(TargetName)"
	  />
	  <Copy
		  SourceFiles="@(ModContentFiles)"
		  DestinationFolder="bin\Output\$(TargetName)Content"
	  />
	  <Delete Files="bin\$(TargetName)Full.zip" />
	  <Delete Files="bin\Output\*.*" />
	  <ZipDir
	    ZipFileName="bin\$(TargetName)Full.zip"
	    DirectoryName="bin\Output"
	  />
  </Target>
  <UsingTask TaskName="ZipDir" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
	  <ParameterGroup>
	    <ZipFileName ParameterType="System.String" Required="true" />
	    <DirectoryName ParameterType="System.String" Required="true" />
	  </ParameterGroup>
	  <Task>
	    <Reference Include="System.IO.Compression.FileSystem" />
	    <Using Namespace="System.IO.Compression" />
	    <Code Type="Fragment" Language="cs"><![CDATA[
	      try
	      {
	        Log.LogMessage(string.Format("Zipping Directory {0} to {1}", DirectoryName, ZipFileName));
	        ZipFile.CreateFromDirectory( DirectoryName, ZipFileName );
	        return true;
	      }
	      catch(Exception ex)
	      {
	        Log.LogErrorFromException(ex);
	        return false;
	      }
	    ]]></Code>
	  </Task>
	</UsingTask>
	<Target Name="AfterZip" AfterTargets="Zip">
		<Copy
			SourceFiles="@(ModContentFiles)"
			DestinationFolder="$(GameModsPath)\$(TargetName)Content"
		/>
	</Target>
</Project>
